//
//   Copyright 2018  SenX S.A.S.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def getVersionName(String revision) {
    String newRevision = revision

    if (null == System.getProperty("nogit") && !revision.endsWith('SNAPSHOT')) {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--always'
            standardOutput = stdout
        }
        newRevision = stdout.toString().trim()
    }
    return newRevision
}

project.ext.bintrayRepo = 'maven'
project.ext.bintrayVcsUrl = 'https://github.com/senx/warp10-plugin-warpstudio'
project.ext.bintrayLicenses = ['Apache-2.0']
project.ext.group = 'io.warp10'
project.ext.uberjar = null != System.getProperty('uberjar')
project.ext.name = 'warp10-plugin-warpstudio'
project.ext.version = getVersionName('0.0.0')
version project.ext.version

sourceCompatibility = 1.7
targetCompatibility = 1.7

//
// Repositories for dependency resolution
//
repositories {
    jcenter()
    maven {
        url 'https://dl.bintray.com/senx/maven'
    }
    maven {
        url 'https://dl.bintray.com/senx/generic'
    }

    maven {
        url 'https://dl.bintray.com/hbs/maven'
    }
}

configurations {
    provided
}

dependencies {
    provided 'io.warp10:warpscript:+'
    compile group: 'io.warp10', name: 'warp10-warpstudio-server', version: 'v1.0.42' // + project.ext.version
}

sourceSets {
    main {
        compileClasspath = compileClasspath + configurations.provided
    }
}

idea {
    module {
        inheritOutputDirs = true
        scopes.PROVIDED.plus += [configurations.provided]
    }
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

shadowJar {
    manifest {
        attributes(
                'Main-Class': 'io.warp10.warpstudio.Main'
        )
        attributes('WarpFleet-Description': 'WarpStudio™ plugin')
        attributes('WarpFleet-Group': project.ext.group)
        attributes('WarpFleet-Artifact': project.ext.name)
        attributes('WarpFleet-Version': project.ext.version)
    }
    relocate 'org', 'io.warp10.warpstudio.org'
    relocate 'jetty', 'io.warp10.warpstudio.jetty'
    classifier = null
    from('.') {
        include 'README.md'
        include 'wf.json'
        include 'warp10.conf'
    }
}

publishing {
    repositories {
        maven {
            name "nexus"
            url "http://localhost:8081/nexus/content/repositories/test/"
            credentials {
                username "admin"
                password "admin123"

            }
        }
    }
    publications {
        //
        // Publication for the standard jar
        //
        maven(MavenPublication) {
            groupId project.ext.group
            artifactId project.ext.name
            version project.ext.version
            artifact sourcesJar
            artifact shadowJar
        }
       /* stdjar(MavenPublication) {
            groupId project.ext.group
            artifactId project.ext.name
            version project.ext.version

            // We publish the result of the 'jar' task and the sources jar
            from components.java
            artifact sourcesJar
        }

        //
        // Publication for the über jar containing all dependencies
        //

        uberjar(MavenPublication) {
            groupId project.ext.group
            artifactId project.ext.name
            version project.ext.version

            // Publish the über jar and the sources
            artifact sourcesJar
            artifact shadowJar
        }*/

    }
}
/*
bintray {
    dryRun = false

    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    publications = project.ext.uberjar ? ['uberjar'] : ['stdjar']
    publish = null != System.getProperty('publish')

    pkg {

        repo = project.ext.bintrayRepo
        name = project.ext.name
        userOrg = 'senx'

        if (project.hasProperty('bintrayUserOrg') || null != System.getenv('BINTRAY_USERORG')) {
            userOrg = project.hasProperty('bintrayUserOrg') ? project.property('bintrayUserOrg') : System.getenv('BINTRAY_USERORG')
        }

        vcsUrl = project.ext.bintrayVcsUrl
        licenses = project.ext.bintrayLicenses

        version {
            version = version
            released = new Date()
        }
    }
}
*/
artifacts {
    archives shadowJar
}
